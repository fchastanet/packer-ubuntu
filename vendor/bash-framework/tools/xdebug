#!/usr/bin/env bash

CURRENT_DIR="$( cd "$( dirname ${BASH_SOURCE[0]})" && pwd )"
SCRIPT_NAME=${0##*/}

# load bash_framework-bootstrap
# shellcheck source=.dev/vendor/bash-framework/_bootstrap.sh
source "$(cd "${CURRENT_DIR}/.." && pwd)/vendor/bash-framework/_bootstrap.sh"

import bash-framework/Log

if [[  "${USER}" = "root" ]]; then
    Log::displayError "The script must not be run as root"
    exit 1
fi

# ensure that Ctrl-C is trapped by this script
trap 'exit 130' INT

showHelp() {
cat << EOF
    Command: ${SCRIPT_NAME} --help prints this help and exits
    Command: ${SCRIPT_NAME} <container> <disable|enable>
    Command: ${SCRIPT_NAME} <container> <0|1>
    Enable or disable xdebug on targeted container
EOF
}

if [[ "$@" = "--help" || "$@" = "-h" ]]; then
    showHelp
    exit 0
fi
if [[ $# != 2 ]]; then
    Log::displayError "You must provide exactly two parameters"
    exit 1
fi

declare container="$1"
declare enable="$2"

declare phpenmodCmd="php"
if [[ "${container}" = "web-php5" ]]; then
    phpenmodCmd="php5"
fi

case "${enable}" in
    enable|1|en)
        phpenmodCmd="${phpenmodCmd}enmod"
        ;;
    disable|0|dis)
        phpenmodCmd="${phpenmodCmd}dismod"
        ;;
    *)
        Log::displayError "unknown parameter ${enable}"
        exit 1
esac

declare cmd=""
if [[ "$(Functions::isWindows; echo $?)" = "1" ]]; then
    cmd+="winpty "
fi
cmd="cli ${container} root \"//bin/bash -c '${phpenmodCmd} xdebug && service apache2 reload'\""
echo "${cmd}"
eval "exec ${cmd}"